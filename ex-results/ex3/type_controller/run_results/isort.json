{
    "time": 5051.3967461586,
    "times": {
        "collect_message": 4283.7474937438965,
        "run": 767.6449303627014
    },
    "result": {
        "isort.api": {
            "sort_code_string": {
                "code": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "extension": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "config": {
                    "test4dt": "Config",
                    "llm-with-summary": "object",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "_Config",
                    "test4dt_be": "Union[Config, dict]"
                },
                "file_path": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "disregard_skip": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "show_diff": {
                    "test4dt": "bool",
                    "llm-with-summary": "Union[bool, TextIO]",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[bool, TextIO]",
                    "test4dt_be": "Union[bool, TextIO]"
                }
            },
            "check_code_string": {
                "code": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "show_diff": {
                    "test4dt": "Union[bool, TextIO]",
                    "llm-with-summary": "Union[bool, TextIO]",
                    "llm-only": "Union[bool, TextIO]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[bool, TextIO]",
                    "test4dt_be": "Union[bool, TextIO]"
                },
                "extension": {
                    "test4dt": "str | None",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Optional[str]",
                    "test4dt_be": "Union[str, None]"
                },
                "config": {
                    "test4dt": "Union[Config, _Config]",
                    "llm-with-summary": "Config",
                    "llm-only": "Dict[str, Any]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "_Config",
                    "test4dt_be": "Union[Dict[str, Any], Config]"
                },
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "disregard_skip": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "sort_stream": {
                "input_stream": {
                    "test4dt": "Union[TextIO, StringIO]",
                    "llm-with-summary": "TextIO",
                    "llm-only": "TextIO",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "IO[str]",
                    "test4dt_be": "Union[TextIO, StringIO]"
                },
                "output_stream": {
                    "test4dt": "TextIO",
                    "llm-with-summary": "Union[TextIO, StringIO]",
                    "llm-only": "Union[TextIO, StringIO]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "TextIO",
                    "test4dt_be": "TextIO"
                },
                "extension": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Optional[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Union[Config, dict]",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[_Config, Config]",
                    "test4dt_be": "_Config"
                },
                "file_path": {
                    "test4dt": "Union[str, Path, None]",
                    "llm-with-summary": "Union[str, Path, None]",
                    "llm-only": "Optional[pathlib.Path]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, Path, None]",
                    "test4dt_be": "Union[str, Path, None]"
                },
                "disregard_skip": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "show_diff": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "io.TextIOBase",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "check_stream": {
                "input_stream": {
                    "test4dt": "Union[IO[str], str]",
                    "llm-with-summary": "Union[IO[str], TextIO]",
                    "llm-only": "Union[TextIO, str]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[TextIO, StringIO]",
                    "test4dt_be": "IO[str]"
                },
                "show_diff": {
                    "test4dt": "Union[bool, TextIO]",
                    "llm-with-summary": "Union[bool, TextIO]",
                    "llm-only": "Union[bool, TextIO]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[bool, TextIO]",
                    "test4dt_be": "Union[bool, TextIO]"
                },
                "extension": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Optional[str]",
                    "test4dt_be": "Union[str, None]"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Union[Config, dict]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "file_path": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "disregard_skip": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "check_file": {
                "filename": {
                    "test4dt": "Union[str, Path]",
                    "llm-with-summary": "Union[str, Path]",
                    "llm-only": "Union[str, Path]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, Path]",
                    "test4dt_be": "Union[str, Path]"
                },
                "show_diff": {
                    "test4dt": "Union[bool, TextIO]",
                    "llm-with-summary": "Union[bool, TextIO]",
                    "llm-only": "Union[bool, TextIO]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[bool, TextIO]",
                    "test4dt_be": "Union[bool, TextIO]"
                },
                "config": {
                    "test4dt": "Union[str, Path]",
                    "llm-with-summary": "Union[dict, Any]",
                    "llm-only": "Dict[str, Any]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[str, Path]",
                    "test4dt_be": "Union[Dict[str, Any], Config]"
                },
                "file_path": {
                    "test4dt": "Optional[str]",
                    "llm-with-summary": "Union[str, Path, None]",
                    "llm-only": "Union[str, Path, None]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Optional[str]",
                    "test4dt_be": "Union[str, None]"
                },
                "disregard_skip": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "extension": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "str | None",
                    "test4dt_be": "str"
                }
            },
            "sort_file": {
                "filename": {
                    "test4dt": "Union[str, Path]",
                    "llm-with-summary": "Union[str, Path]",
                    "llm-only": "Union[str, Path]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, Path]",
                    "test4dt_be": "Union[str, Path]"
                },
                "extension": {
                    "test4dt": "Optional[str]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Optional[str]"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "file_path": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Union[str, Path, None]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, Path, None]"
                },
                "disregard_skip": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "ask_to_apply": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "show_diff": {
                    "test4dt": "Union[bool, TextIO]",
                    "llm-with-summary": "Union[bool, TextIO]",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[bool, TextIO]",
                    "test4dt_be": "Union[bool, TextIO]"
                },
                "write_to_stdout": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "output": {
                    "test4dt": "TextIO",
                    "llm-with-summary": "TextIO",
                    "llm-only": "TextIO",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "TextIO",
                    "test4dt_be": "Union[TextIO, None]"
                }
            },
            "find_imports_in_code": {
                "code": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "Union[_Config, Dict[str, Any]]",
                    "llm-with-summary": "Union[Dict[str, Any], Config]",
                    "llm-only": "Dict[str, Any]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "_Config",
                    "test4dt_be": "Union[dict, object]"
                },
                "file_path": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Optional[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "unique": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "top_only": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "find_imports_in_stream": {
                "input_stream": {
                    "test4dt": "Union[str, IO[str]]",
                    "llm-with-summary": "Union[str, TextIO]",
                    "llm-only": "Union[str, TextIO]",
                    "hityper": "any",
                    "type4py": "Optional[Iterable[str]]",
                    "test4dt_se": "Union[str, IO]",
                    "test4dt_be": "Union[str, IO[str]]"
                },
                "config": {
                    "test4dt": "Union[Config, dict]",
                    "llm-with-summary": "Union[Dict[str, Any], object]",
                    "llm-only": "Union[dict, Config]",
                    "hityper": "any",
                    "type4py": "Dict[str, Any]",
                    "test4dt_se": "_Config",
                    "test4dt_be": "Union[dict, Config]"
                },
                "file_path": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Optional[Iterable[str]]",
                    "test4dt_se": "Optional[str]",
                    "test4dt_be": "Union[str, None]"
                },
                "unique": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "TextIO",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "str",
                    "test4dt_be": "IO[str]"
                },
                "top_only": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "Optional[Iterable[str]]",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "_seen": {
                    "test4dt": "Union[None, Set[str]]",
                    "llm-with-summary": "Union[None, Set[str]]",
                    "llm-only": "Union[None, Set[str]]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "Union[None, Set[str]]",
                    "test4dt_be": "Union[None, Set[str]]"
                }
            },
            "find_imports_in_file": {
                "filename": {
                    "test4dt": "Union[str, Path]",
                    "llm-with-summary": "Union[str, Path]",
                    "llm-only": "Union[str, Path]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, Path]",
                    "test4dt_be": "Union[str, Path]"
                },
                "config": {
                    "test4dt": "Config",
                    "llm-with-summary": "Any",
                    "llm-only": "Dict[str, Any]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "isort.settings._Config",
                    "test4dt_be": "Union[dict, Config]"
                },
                "file_path": {
                    "test4dt": "Optional[str]",
                    "llm-with-summary": "Optional[str]",
                    "llm-only": "Union[str, Path, None]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "unique": {
                    "test4dt": "bool",
                    "llm-with-summary": "str | Path",
                    "llm-only": "str | Path",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str | Path",
                    "test4dt_be": "str | Path"
                },
                "top_only": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "find_imports_in_paths": {
                "paths": {
                    "test4dt": "Union[Iterable[str], Iterable[os.PathLike]]",
                    "llm-with-summary": "Union[List[str], Tuple[str, ...], Set[str]]",
                    "llm-only": "Iterable[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[List[str], Tuple[str, ...], Set[str]]",
                    "test4dt_be": "Union[List[str], Tuple[str, ...], Iterable[str]]"
                },
                "config": {
                    "test4dt": "Union[Config, _Config]",
                    "llm-with-summary": "dict",
                    "llm-only": "Union[dict, object]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[Config, dict]",
                    "test4dt_be": "Union[dict, object]"
                },
                "file_path": {
                    "test4dt": "Optional[str]",
                    "llm-with-summary": "Optional[str]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Optional[str]",
                    "test4dt_be": "Optional[str]"
                },
                "unique": {
                    "test4dt": "bool",
                    "llm-with-summary": "Collection[str]",
                    "llm-only": "Union[List[str], Tuple[str, ...], Set[str]]",
                    "hityper": "any",
                    "type4py": "Optional[str]",
                    "test4dt_se": "Collection[str]",
                    "test4dt_be": "Iterable[str]"
                },
                "top_only": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "_config": {
                "path": {
                    "test4dt": "Optional[Any]",
                    "llm-with-summary": "Optional[Any]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Optional[str]",
                    "test4dt_be": "Optional[Any]"
                },
                "config": {
                    "test4dt": "Union[Config, str]",
                    "llm-with-summary": "Union[Type[DEFAULT_CONFIG], Config]",
                    "llm-only": "Union[Config, Any]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[Config, DefaultConfig]",
                    "test4dt_be": "Union[Config, str]"
                }
            }
        },
        "isort.comments": {
            "parse": {
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "add_to_line": {
                "comments": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[List[str], Iterable[str]]",
                    "test4dt_be": "Union[Iterable[str], List[str]]"
                },
                "original_string": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "removed": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "comment_prefix": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.core": {
            "process": {
                "input_stream": {
                    "test4dt": "IO[str]",
                    "llm-with-summary": "TextIO",
                    "llm-only": "IO[str]",
                    "hityper": "any",
                    "type4py": "backuppy.io.IOIter",
                    "test4dt_se": "TextIO",
                    "test4dt_be": "IO[str]"
                },
                "output_stream": {
                    "test4dt": "TextIO",
                    "llm-with-summary": "TextIO",
                    "llm-only": "TextIO",
                    "hityper": "any",
                    "type4py": "BinaryIO",
                    "test4dt_se": "TextIO",
                    "test4dt_be": "TextIO"
                },
                "extension": {
                    "test4dt": "Literal[\"py\", \"pyi\", \"pyx\"]",
                    "llm-with-summary": "str",
                    "llm-only": "Literal[\"py\", \"pyi\", \"pyx\"]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Literal[\"py\", \"pyi\", \"pyx\"]",
                    "test4dt_be": "Literal[\"py\", \"pyi\", \"pyx\"]"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "isort.settings.Config",
                    "llm-only": "isort.settings.Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[_Config, Config]",
                    "test4dt_be": "_Config"
                }
            },
            "_indented_config": {
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "indent": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                }
            },
            "_has_changed": {
                "before": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "after": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "line_separator": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "ignore_whitespace": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            }
        },
        "isort.exceptions": {
            "InvalidSettingsPath.__init__": {
                "self": {
                    "test4dt": "InvalidSettingsPath",
                    "llm-with-summary": "InvalidSettingsPath",
                    "llm-only": "InvalidSettingsPath",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "str",
                    "test4dt_be": "InvalidSettingsPath"
                },
                "settings_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ExistingSyntaxErrors.__init__": {
                "self": {
                    "test4dt": "ExistingSyntaxErrors",
                    "llm-with-summary": "ExistingSyntaxErrors",
                    "llm-only": "ExistingSyntaxErrors",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ExistingSyntaxErrors",
                    "test4dt_be": "ExistingSyntaxErrors"
                },
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "IntroducedSyntaxErrors.__init__": {
                "self": {
                    "test4dt": "IntroducedSyntaxErrors",
                    "llm-with-summary": "IntroducedSyntaxErrors",
                    "llm-only": "IntroducedSyntaxErrors",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "IntroducedSyntaxErrors",
                    "test4dt_be": "IntroducedSyntaxErrors"
                },
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "FileSkipped.__init__": {
                "self": {
                    "test4dt": "FileSkipped",
                    "llm-with-summary": "FileSkipped",
                    "llm-only": "FileSkipped",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "FileSkipped",
                    "test4dt_be": "FileSkipped"
                },
                "message": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "FileSkipComment.__init__": {
                "self": {
                    "test4dt": "FileSkipComment",
                    "llm-with-summary": "FileSkipComment",
                    "llm-only": "FileSkipComment",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "str",
                    "test4dt_be": "FileSkipComment"
                },
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "FileSkipSetting.__init__": {
                "self": {
                    "test4dt": "FileSkipSetting",
                    "llm-with-summary": "FileSkipSetting",
                    "llm-only": "FileSkipSetting",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "FileSkipSetting",
                    "test4dt_be": "FileSkipSetting"
                },
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ProfileDoesNotExist.__init__": {
                "self": {
                    "test4dt": "str",
                    "llm-with-summary": "ProfileDoesNotExist",
                    "llm-only": "ProfileDoesNotExist",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ProfileDoesNotExist",
                    "test4dt_be": "ProfileDoesNotExist"
                },
                "profile": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "FormattingPluginDoesNotExist.__init__": {
                "self": {
                    "test4dt": "FormattingPluginDoesNotExist",
                    "llm-with-summary": "FormattingPluginDoesNotExist",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "FormattingPluginDoesNotExist",
                    "test4dt_be": "FormattingPluginDoesNotExist"
                },
                "formatter": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "LiteralParsingFailure.__init__": {
                "self": {
                    "test4dt": "LiteralParsingFailure",
                    "llm-with-summary": "LiteralParsingFailure",
                    "llm-only": "LiteralParsingFailure",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "str",
                    "test4dt_be": "LiteralParsingFailure"
                },
                "code": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "original_error": {
                    "test4dt": "Exception",
                    "llm-with-summary": "BaseException",
                    "llm-only": "Exception",
                    "hityper": "any",
                    "type4py": "Exception",
                    "test4dt_se": "Exception",
                    "test4dt_be": "Exception"
                }
            },
            "LiteralSortTypeMismatch.__init__": {
                "self": {
                    "test4dt": "LiteralSortTypeMismatch",
                    "llm-with-summary": "LiteralSortTypeMismatch",
                    "llm-only": "LiteralSortTypeMismatch",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "LiteralSortTypeMismatch",
                    "test4dt_be": "LiteralSortTypeMismatch"
                },
                "kind": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "expected_kind": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "AssignmentsFormatMismatch.__init__": {
                "self": {
                    "test4dt": "AssignmentsFormatMismatch",
                    "llm-with-summary": "AssignmentsFormatMismatch",
                    "llm-only": "AssignmentsFormatMismatch",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "AssignmentsFormatMismatch",
                    "test4dt_be": "AssignmentsFormatMismatch"
                },
                "code": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bytes",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "UnsupportedSettings._format_option": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "value": {
                    "test4dt": "dict[str, dict[str, Any]]",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "dict[str, dict[str, Union[str, int, bool, None]]]",
                    "test4dt_be": "Dict[str, Dict[str, Any]]"
                },
                "source": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "UnsupportedSettings.__init__": {
                "self": {
                    "test4dt": "UnsupportedSettings",
                    "llm-with-summary": "UnsupportedSettings",
                    "llm-only": "UnsupportedSettings",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "UnsupportedSettings",
                    "test4dt_be": "UnsupportedSettings"
                },
                "unsupported_settings": {
                    "test4dt": "dict[str, dict[str, Union[str, Any]]]",
                    "llm-with-summary": "Dict[str, Dict[str, Any]]",
                    "llm-only": "Dict[str, Dict[str, Any]]",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "Dict[str, Dict[str, Any]]",
                    "test4dt_be": "Dict[str, Dict[str, Any]]"
                }
            },
            "UnsupportedEncoding.__init__": {
                "self": {
                    "test4dt": "UnsupportedEncoding",
                    "llm-with-summary": "UnsupportedEncoding",
                    "llm-only": "UnsupportedEncoding",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "UnsupportedEncoding",
                    "test4dt_be": "UnsupportedEncoding"
                },
                "filename": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "MissingSection.__init__": {
                "self": {
                    "test4dt": "MissingSection",
                    "llm-with-summary": "MissingSection",
                    "llm-only": "MissingSection",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "MissingSection",
                    "test4dt_be": "MissingSection"
                },
                "import_module": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "section": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.files": {
            "find": {
                "paths": {
                    "test4dt": "Union[List[str], List[Path]]",
                    "llm-with-summary": "Iterable[Union[str, Path]]",
                    "llm-only": "Union[str, bytes, os.PathLike]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[str, List[str]]",
                    "test4dt_be": "Union[str, List[str]]"
                },
                "config": {
                    "test4dt": "Config",
                    "llm-with-summary": "Union[Any, object]",
                    "llm-only": "Union[Config, Any]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "_Config"
                },
                "skipped": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "list[str]"
                },
                "broken": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "list",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "list[str]"
                }
            }
        },
        "isort.format": {
            "format_simplified": {
                "import_line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "format_natural": {
                "import_line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "show_unified_diff": {},
            "ask_whether_to_apply_changes_to_file": {
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "remove_whitespace": {
                "content": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "line_separator": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "create_terminal_printer": {
                "color": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "output": {
                    "test4dt": "Union[IO, None]",
                    "llm-with-summary": "Optional[Any]",
                    "llm-only": "Optional[TextIO]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Optional[TextIO]",
                    "test4dt_be": "Optional[Any]"
                }
            },
            "BasicPrinter.__init__": {
                "self": {
                    "test4dt": "BasicPrinter",
                    "llm-with-summary": "BasicPrinter",
                    "llm-only": "BasicPrinter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "BasicPrinter",
                    "test4dt_be": "BasicPrinter"
                },
                "output": {
                    "test4dt": "Union[None, IO]",
                    "llm-with-summary": "Union[None, IO]",
                    "llm-only": "Union[None, IO]",
                    "hityper": "None",
                    "type4py": "str",
                    "test4dt_se": "Union[None, TextIO]",
                    "test4dt_be": "Union[None, IO]"
                }
            },
            "BasicPrinter.success": {
                "self": {
                    "test4dt": "BasicPrinter",
                    "llm-with-summary": "BasicPrinter",
                    "llm-only": "BasicPrinter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "BasicPrinter",
                    "test4dt_be": "BasicPrinter"
                },
                "message": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "BasicPrinter.error": {
                "self": {
                    "test4dt": "BasicPrinter",
                    "llm-with-summary": "BasicPrinter",
                    "llm-only": "BasicPrinter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "BasicPrinter",
                    "test4dt_be": "BasicPrinter"
                },
                "message": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, int, float]",
                    "test4dt_be": "str"
                }
            },
            "BasicPrinter.diff_line": {
                "self": {
                    "test4dt": "BasicPrinter",
                    "llm-with-summary": "BasicPrinter",
                    "llm-only": "BasicPrinter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "BasicPrinter",
                    "test4dt_be": "BasicPrinter"
                },
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ColoramaPrinter.__init__": {
                "self": {
                    "test4dt": "ColoramaPrinter",
                    "llm-with-summary": "ColoramaPrinter",
                    "llm-only": "ColoramaPrinter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ColoramaPrinter",
                    "test4dt_be": "ColoramaPrinter"
                },
                "output": {
                    "test4dt": "None",
                    "llm-with-summary": "Optional[Any]",
                    "llm-only": "Any",
                    "hityper": "None",
                    "type4py": "str",
                    "test4dt_se": "None",
                    "test4dt_be": "None"
                }
            },
            "ColoramaPrinter.style_text": {
                "text": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "style": {
                    "test4dt": "Union[None, Any]",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "None",
                    "type4py": "str",
                    "test4dt_se": "Union[colorama.Fore, None]",
                    "test4dt_be": "Union[None, str]"
                }
            },
            "ColoramaPrinter.diff_line": {
                "self": {
                    "test4dt": "ColoramaPrinter",
                    "llm-with-summary": "ColoramaPrinter",
                    "llm-only": "ColoramaPrinter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ColoramaPrinter",
                    "test4dt_be": "ColoramaPrinter"
                },
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.hooks": {
            "get_output": {
                "command": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "get_lines": {
                "command": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "git_hook": {
                "strict": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "modify": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "lazy": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "settings_file": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Optional[str]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.identify": {
            "imports": {
                "input_stream": {
                    "test4dt": "Iterable[str]",
                    "llm-with-summary": "Union[IO[str], Iterable[str]]",
                    "llm-only": "Union[str, List[str]]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[List[str], IO[str]]",
                    "test4dt_be": "Iterable[str]"
                },
                "config": {
                    "test4dt": "isort.settings._Config",
                    "llm-with-summary": "object",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "file_path": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Optional[str]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "top_only": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "Import.statement": {
                "self": {
                    "test4dt": "Import",
                    "llm-with-summary": "Import",
                    "llm-only": "Import",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Import",
                    "test4dt_be": "Import"
                }
            },
            "Import.__str__": {
                "self": {
                    "test4dt": "Import",
                    "llm-with-summary": "Import",
                    "llm-only": "Import",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Import",
                    "test4dt_be": "Import"
                }
            }
        },
        "isort.io": {
            "File.detect_encoding": {
                "filename": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "Union[str, Path]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "readline": {
                    "test4dt": "Callable[[], bytes]",
                    "llm-with-summary": "Callable[[], bytes]",
                    "llm-only": "Callable[[], bytes]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Callable[[], bytes]",
                    "test4dt_be": "Callable[[], bytes]"
                }
            },
            "File.from_contents": {
                "contents": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "filename": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "Union[str, Path]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, bytes, os.PathLike]",
                    "test4dt_be": "str"
                }
            },
            "File.extension": {
                "self": {
                    "test4dt": "File",
                    "llm-with-summary": "File",
                    "llm-only": "File",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "File",
                    "test4dt_be": "File"
                }
            },
            "File._open": {
                "filename": {
                    "test4dt": "Union[str, bytes, os.PathLike]",
                    "llm-with-summary": "Union[str, bytes, Path]",
                    "llm-only": "Union[str, bytes, PathLike]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, bytes, Path]",
                    "test4dt_be": "Union[str, bytes, Path]"
                }
            },
            "File.read": {
                "filename": {
                    "test4dt": "Union[str, Path]",
                    "llm-with-summary": "Union[str, Path]",
                    "llm-only": "Union[str, Path]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, bytes, os.PathLike]",
                    "test4dt_be": "Union[str, Path]"
                }
            },
            "_EmptyIO.write": {
                "self": {
                    "test4dt": "_EmptyIO",
                    "llm-with-summary": "_EmptyIO",
                    "llm-only": "_EmptyIO",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_EmptyIO",
                    "test4dt_be": "_EmptyIO"
                }
            }
        },
        "isort.literal": {
            "assignments": {
                "code": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "assignment": {
                "code": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "sort_type": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "extension": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Config",
                    "test4dt_be": "_Config"
                }
            },
            "register_type": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "kind": {
                    "test4dt": "Any",
                    "llm-with-summary": "type",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "Union[type, str]"
                }
            },
            "_dict": {
                "value": {
                    "test4dt": "dict",
                    "llm-with-summary": "dict",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                },
                "printer": {
                    "test4dt": "Union[ISortPrettyPrinter, BasicPrinter, ColoramaPrinter]",
                    "llm-with-summary": "pprint.PrettyPrinter",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "ISortPrettyPrinter",
                    "test4dt_be": "pprint.PrettyPrinter"
                }
            },
            "_list": {
                "value": {
                    "test4dt": "Iterable",
                    "llm-with-summary": "Iterable",
                    "llm-only": "list",
                    "hityper": "any",
                    "type4py": "list",
                    "test4dt_se": "Iterable",
                    "test4dt_be": "Iterable"
                },
                "printer": {
                    "test4dt": "ISortPrettyPrinter",
                    "llm-with-summary": "pprint.PrettyPrinter",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "list",
                    "test4dt_se": "ISortPrettyPrinter",
                    "test4dt_be": "pprint.PrettyPrinter"
                }
            },
            "_unique_list": {
                "value": {
                    "test4dt": "Union[list, tuple, set]",
                    "llm-with-summary": "Union[list, tuple, set]",
                    "llm-only": "Union[list, tuple, set]",
                    "hityper": "any",
                    "type4py": "list",
                    "test4dt_se": "Union[list, tuple, set]",
                    "test4dt_be": "Iterable[Any]"
                },
                "printer": {
                    "test4dt": "Union[ISortPrettyPrinter, BasicPrinter, ColoramaPrinter]",
                    "llm-with-summary": "pprint.PrettyPrinter",
                    "llm-only": "pprint.PrettyPrinter",
                    "hityper": "any",
                    "type4py": "list",
                    "test4dt_se": "ISortPrettyPrinter",
                    "test4dt_be": "pprint.PrettyPrinter"
                }
            },
            "_set": {
                "value": {
                    "test4dt": "set",
                    "llm-with-summary": "set",
                    "llm-only": "set",
                    "hityper": "any",
                    "type4py": "set",
                    "test4dt_se": "set",
                    "test4dt_be": "set"
                },
                "printer": {
                    "test4dt": "ISortPrettyPrinter",
                    "llm-with-summary": "pprint.PrettyPrinter",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "set",
                    "test4dt_se": "ISortPrettyPrinter",
                    "test4dt_be": "pprint.PrettyPrinter"
                }
            },
            "_tuple": {
                "value": {
                    "test4dt": "Iterable[Any]",
                    "llm-with-summary": "Union[list, set, tuple]",
                    "llm-only": "Iterable",
                    "hityper": "any",
                    "type4py": "tuple",
                    "test4dt_se": "Union[list, set]",
                    "test4dt_be": "Iterable"
                },
                "printer": {
                    "test4dt": "Union[ISortPrettyPrinter, BasicPrinter, ColoramaPrinter]",
                    "llm-with-summary": "pprint.PrettyPrinter",
                    "llm-only": "pprint.PrettyPrinter",
                    "hityper": "any",
                    "type4py": "tuple",
                    "test4dt_se": "Union[ISortPrettyPrinter, BasicPrinter, ColoramaPrinter]",
                    "test4dt_be": "PrettyPrinter"
                }
            },
            "_unique_tuple": {
                "value": {
                    "test4dt": "Iterable[Hashable]",
                    "llm-with-summary": "Iterable[Any]",
                    "llm-only": "Iterable[Any]",
                    "hityper": "any",
                    "type4py": "tuple",
                    "test4dt_se": "Iterable[Any]",
                    "test4dt_be": "Iterable"
                },
                "printer": {
                    "test4dt": "ISortPrettyPrinter",
                    "llm-with-summary": "PrettyPrinter",
                    "llm-only": "Printer",
                    "hityper": "any",
                    "type4py": "tuple",
                    "test4dt_se": "Union[ISortPrettyPrinter, BasicPrinter, ColoramaPrinter]",
                    "test4dt_be": "pprint.PrettyPrinter"
                }
            },
            "ISortPrettyPrinter.__init__": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "ISortPrettyPrinter",
                    "llm-only": "ISortPrettyPrinter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ISortPrettyPrinter",
                    "test4dt_be": "ISortPrettyPrinter"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "object",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "isorsettings.Config",
                    "test4dt_se": "Config",
                    "test4dt_be": "_Config"
                }
            },
            "wrap": {
                "function": {
                    "test4dt": "Callable",
                    "llm-with-summary": "Callable",
                    "llm-only": "function",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Callable",
                    "test4dt_be": "Callable"
                }
            }
        },
        "isort.logo": {},
        "isort.main": {
            "sort_imports": {
                "file_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "isort.settings.Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "_Config"
                },
                "check": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "ask_to_apply": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "write_to_stdout": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "_print_hard_fail": {
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "object",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "argparse.Namespace",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "offending_file": {
                    "test4dt": "Optional[str]",
                    "llm-with-summary": "Optional[str]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "Tuple[Dict[str, Any], Dict[str, Any]]",
                    "test4dt_se": "Optional[str]",
                    "test4dt_be": "Optional[str]"
                },
                "message": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                }
            },
            "_build_arg_parser": {},
            "parse_args": {
                "argv": {
                    "test4dt": "Optional[List[str]]",
                    "llm-with-summary": "Union[None, List[str]]",
                    "llm-only": "Union[list[str], None]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "Union[None, list[str]]",
                    "test4dt_be": "Union[None, List[str]]"
                }
            },
            "_preconvert": {
                "item": {
                    "test4dt": "Union[set, frozenset, WrapModes, Path, Callable]",
                    "llm-with-summary": "Union[set, frozenset, WrapModes, Path, Callable]",
                    "llm-only": "Union[set, frozenset, WrapModes, Path, callable]",
                    "hityper": "any",
                    "type4py": "T",
                    "test4dt_se": "Union[set, frozenset, WrapModes, Path, callable]",
                    "test4dt_be": "Union[set, frozenset, WrapModes, Path, Callable]"
                }
            },
            "identify_imports_main": {
                "argv": {
                    "test4dt": "Union[list[str], None]",
                    "llm-with-summary": "Union[list[str], None]",
                    "llm-only": "Optional[List[str]]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "Union[list[str], None]",
                    "test4dt_be": "Union[list[str], None]"
                },
                "stdin": {
                    "test4dt": "Union[None, IO[Any]]",
                    "llm-with-summary": "Union[None, IO[Any]]",
                    "llm-only": "Union[None, IO[Any]]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "Union[None, IO[Any]]",
                    "test4dt_be": "Union[TextIO, None]"
                }
            },
            "main": {
                "argv": {
                    "test4dt": "Union[List[str], None]",
                    "llm-with-summary": "Union[None, List[str]]",
                    "llm-only": "Union[list[str], None]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "Union[List[str], None]",
                    "test4dt_be": "Union[list[str], None]"
                },
                "stdin": {
                    "test4dt": "Optional[IO[Any]]",
                    "llm-with-summary": "Optional[IO[Any]]",
                    "llm-only": "Union[None, TextIO]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "Optional[IO[Any]]",
                    "test4dt_be": "Optional[TextIO]"
                }
            },
            "SortAttempt.__init__": {
                "self": {
                    "test4dt": "SortAttempt",
                    "llm-with-summary": "SortAttempt",
                    "llm-only": "SortAttempt",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "SortAttempt",
                    "test4dt_be": "SortAttempt"
                },
                "incorrectly_sorted": {
                    "test4dt": "Union[list, bool]",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "Optional[List[str]]",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "skipped": {
                    "test4dt": "Union[list, bool]",
                    "llm-with-summary": "None",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Any",
                    "test4dt_be": "bool"
                },
                "supported_encoding": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "bool",
                    "test4dt_be": "Any"
                }
            }
        },
        "isort.output": {
            "sorted_imports": {
                "parsed": {
                    "test4dt": "ParsedContent",
                    "llm-with-summary": "Parsed",
                    "llm-only": "Parsed",
                    "hityper": "any",
                    "type4py": "parse.ParsedContent",
                    "test4dt_se": "ParsedContent",
                    "test4dt_be": "ParsedContent"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "ParsedContent",
                    "test4dt_be": "Union[_Config, None]"
                },
                "extension": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Dict[str, Any]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "import_type": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Dict[str, Set[str]]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_with_from_imports": {
                "parsed": {
                    "test4dt": "ParsedContent",
                    "llm-with-summary": "object",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "List[Tuple[str, str]]",
                    "test4dt_se": "ParsedContent",
                    "test4dt_be": "ParsedContent"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "settings.Config",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "from_modules": {
                    "test4dt": "Iterable[str]",
                    "llm-with-summary": "Iterable[str]",
                    "llm-only": "Union[List[str], Set[str]]",
                    "hityper": "any",
                    "type4py": "Iterable[str]",
                    "test4dt_se": "Iterable[str]",
                    "test4dt_be": "List[str]"
                },
                "section": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "remove_imports": {
                    "test4dt": "Set[str]",
                    "llm-with-summary": "Union[Set[str], List[str], None]",
                    "llm-only": "Union[set[str], list[str]]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "set",
                    "test4dt_be": "AbstractSet[str]"
                },
                "import_type": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Optional[Dict[str, str]]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_with_straight_imports": {
                "parsed": {
                    "test4dt": "ParsedContent",
                    "llm-with-summary": "ParsedImports",
                    "llm-only": "ParsedImports",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "ParsedContent",
                    "test4dt_be": "ParsedContent"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "object",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "List[Tuple[str, str, str]]",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "straight_modules": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "Set[str]",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "List[str]"
                },
                "section": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "remove_imports": {
                    "test4dt": "Set[str]",
                    "llm-with-summary": "Union[set, list]",
                    "llm-only": "Set[str]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "Set[str]",
                    "test4dt_be": "Union[set[str], list[str]]"
                },
                "import_type": {
                    "test4dt": "Literal[\"import\", \"from\"]",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Dict[str, Set[str]]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_output_as_string": {
                "lines": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "Union[List[str], Tuple[str, ...]]"
                },
                "line_separator": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_normalize_empty_lines": {
                "lines": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "list",
                    "test4dt_be": "List[str]"
                }
            },
            "_ensure_newline_before_comment": {
                "output": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "List[str]"
                }
            },
            "_with_star_comments": {
                "parsed": {
                    "test4dt": "ParsedContent",
                    "llm-with-summary": "object",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "ParsedContent"
                },
                "module": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "Module",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "dict",
                    "test4dt_be": "str"
                },
                "comments": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "list",
                    "llm-only": "list",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "list",
                    "test4dt_be": "List[str]"
                }
            },
            "_LineWithComments.__new__": {
                "cls": {
                    "test4dt": "Type[_LineWithComments]",
                    "llm-with-summary": "type[_LineWithComments]",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Type[_LineWithComments]",
                    "test4dt_be": "Type[_LineWithComments]"
                },
                "value": {
                    "test4dt": "str",
                    "llm-with-summary": "object",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "comments": {
                    "test4dt": "Any",
                    "llm-with-summary": "Union[str, List[str]]",
                    "llm-only": "list",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, List[str]]",
                    "test4dt_be": "List[str]"
                }
            },
            "is_comment": {
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.parse": {
            "_infer_line_separator": {
                "contents": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bytes",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_normalize_line": {
                "raw_line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bytes",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "import_type": {
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "_Config",
                    "test4dt_be": "Union[_Config, None]"
                }
            },
            "_strip_syntax": {
                "import_string": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "skip_line": {
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "in_quote": {
                    "test4dt": "str",
                    "llm-with-summary": "Union[str, Literal[\"\"]]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, Literal[\"\"]]",
                    "test4dt_be": "Union[str, Literal[\"\"]]"
                },
                "index": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "List[int]",
                    "test4dt_se": "int",
                    "test4dt_be": "int"
                },
                "section_comments": {
                    "test4dt": "any",
                    "llm-with-summary": "Any",
                    "llm-only": "list",
                    "hityper": "any",
                    "type4py": "List[int]",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                },
                "needs_import": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "file_contents": {
                "contents": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[_Config, Config]",
                    "test4dt_be": "_Config"
                }
            }
        },
        "isort.place": {
            "module": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "Optional[Any]",
                    "llm-with-summary": "any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "None",
                    "test4dt_be": "Any"
                }
            },
            "module_with_reason": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Union[Config, Any]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                }
            },
            "_forced_separate": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Union[Any, object]",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "isorsettings.Config",
                    "test4dt_se": "Union[Config, _Config]",
                    "test4dt_be": "_Config"
                }
            },
            "_local": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "isorsettings.Config",
                    "test4dt_se": "None",
                    "test4dt_be": "None"
                }
            },
            "_known_pattern": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "Config",
                    "llm-with-summary": "object",
                    "llm-only": "Union[Config, Any]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[_Config, Config]",
                    "test4dt_be": "Config"
                }
            },
            "_src_path": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "object",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Config",
                    "test4dt_be": "Union[_Config, dict]"
                },
                "src_paths": {
                    "test4dt": "Union[None, List[Path], Tuple[Path]]",
                    "llm-with-summary": "Union[List[Path], Tuple[Path, ...], None]",
                    "llm-only": "Union[None, Sequence[Union[str, Path]]]",
                    "hityper": "any",
                    "type4py": "Optional[str]",
                    "test4dt_se": "Union[None, tuple]",
                    "test4dt_be": "Union[None, List[Path], Tuple[Path]]"
                },
                "prefix": {
                    "test4dt": "tuple",
                    "llm-with-summary": "tuple",
                    "llm-only": "tuple",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "tuple",
                    "test4dt_be": "tuple"
                }
            },
            "_is_module": {
                "path": {
                    "test4dt": "pathlib.Path",
                    "llm-with-summary": "pathlib.Path",
                    "llm-only": "pathlib.Path",
                    "hityper": "any",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "pathlib.Path",
                    "test4dt_be": "pathlib.Path"
                }
            },
            "_is_package": {
                "path": {
                    "test4dt": "pathlib.Path",
                    "llm-with-summary": "pathlib.Path",
                    "llm-only": "str | PathLike[str]",
                    "hityper": "any",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "pathlib.Path",
                    "test4dt_be": "pathlib.Path"
                }
            },
            "_is_namespace_package": {
                "path": {
                    "test4dt": "pathlib.Path",
                    "llm-with-summary": "pathlib.Path",
                    "llm-only": "pathlib.Path",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[pathlib.Path, str]",
                    "test4dt_be": "pathlib.Path"
                },
                "src_extensions": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Collection[str]",
                    "test4dt_be": "Collection[str]"
                }
            },
            "_src_path_is_module": {
                "src_path": {
                    "test4dt": "pathlib.Path",
                    "llm-with-summary": "pathlib.Path",
                    "llm-only": "pathlib.Path",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "pathlib.Path",
                    "test4dt_be": "pathlib.Path"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.profiles": {},
        "isort.pylama_isort": {
            "supress_stdout": {},
            "Linter.allow": {
                "self": {
                    "test4dt": "Linter",
                    "llm-with-summary": "Linter",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Linter",
                    "test4dt_be": "str"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "Linter.run": {
                "self": {
                    "test4dt": "Linter",
                    "llm-with-summary": "Linter",
                    "llm-only": "Linter",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Linter",
                    "test4dt_be": "Linter"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.sections": {},
        "isort.settings": {
            "_get_str_to_type_converter": {
                "setting_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_as_list": {
                "value": {
                    "test4dt": "Union[list, str]",
                    "llm-with-summary": "Union[list, str]",
                    "llm-only": "Union[str, list]",
                    "hityper": "any",
                    "type4py": "T",
                    "test4dt_se": "Union[list, str]",
                    "test4dt_be": "Union[list, str]"
                }
            },
            "_abspaths": {
                "cwd": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "values": {
                    "test4dt": "Iterable[str]",
                    "llm-with-summary": "Iterable[str]",
                    "llm-only": "Union[list[str], set[str], tuple[str, ...]]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Iterable[str]",
                    "test4dt_be": "Iterable[str]"
                }
            },
            "_find_config": {
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_get_config_data": {
                "file_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "sections": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "Union[List[str], Tuple[str, ...]]",
                    "hityper": "any",
                    "type4py": "Tuple[str]",
                    "test4dt_se": "Union[List[str], Tuple[str, ...], Set[str]]",
                    "test4dt_be": "Iterable[str]"
                }
            },
            "_as_bool": {
                "value": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_Config.__post_init__": {
                "self": {
                    "test4dt": "_Config",
                    "llm-with-summary": "_Config",
                    "llm-only": "_Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                }
            },
            "_Config.__hash__": {
                "self": {
                    "test4dt": "_Config",
                    "llm-with-summary": "_Config",
                    "llm-only": "_Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                }
            },
            "Config.__init__": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "str"
                },
                "settings_file": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "settings_path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "str",
                    "llm-with-summary": "Config",
                    "llm-only": "Optional[Config]",
                    "hityper": "any",
                    "type4py": "Dict[str, Any]",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                }
            },
            "Config.is_supported_filetype": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                },
                "file_name": {
                    "test4dt": "Union[str, bytes, os.PathLike]",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "Config.is_skipped": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                },
                "file_path": {
                    "test4dt": "Union[str, Path]",
                    "llm-with-summary": "Union[Path, str]",
                    "llm-only": "Path",
                    "hityper": "any",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "Union[str, Path]",
                    "test4dt_be": "Union[str, Path]"
                }
            },
            "Config.known_patterns": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                }
            },
            "Config.section_comments": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                }
            },
            "Config.skips": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                }
            },
            "Config.skip_globs": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                }
            },
            "Config._parse_known_pattern": {
                "self": {
                    "test4dt": "Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "Config"
                },
                "pattern": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.setuptools_commands": {
            "ISortCommand.initialize_options": {
                "self": {
                    "test4dt": "ISortCommand",
                    "llm-with-summary": "ISortCommand",
                    "llm-only": "ISortCommand",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ISortCommand",
                    "test4dt_be": "ISortCommand"
                }
            },
            "ISortCommand.finalize_options": {
                "self": {
                    "test4dt": "ISortCommand",
                    "llm-with-summary": "ISortCommand",
                    "llm-only": "ISortCommand",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ISortCommand",
                    "test4dt_be": "ISortCommand"
                }
            },
            "ISortCommand.distribution_files": {
                "self": {
                    "test4dt": "ISortCommand",
                    "llm-with-summary": "ISortCommand",
                    "llm-only": "ISortCommand",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ISortCommand",
                    "test4dt_be": "ISortCommand"
                }
            },
            "ISortCommand.run": {
                "self": {
                    "test4dt": "ISortCommand",
                    "llm-with-summary": "ISortCommand",
                    "llm-only": "ISortCommand",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ISortCommand",
                    "test4dt_be": "ISortCommand"
                }
            }
        },
        "isort.sorting": {
            "module_key": {
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "object",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "_Config",
                    "test4dt_be": "Union[_Config, dict]"
                },
                "sub_imports": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "ignore_case": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "section_name": {
                    "test4dt": "Optional[str]",
                    "llm-with-summary": "Optional[str]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "str",
                    "test4dt_be": "Optional[str]"
                },
                "straight_import": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "section_key": {
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Dict[str, Any]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "object",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "Dict[str, Any]",
                    "test4dt_se": "Union[Config, _Config]",
                    "test4dt_be": "_Config"
                }
            },
            "naturally": {
                "to_sort": {
                    "test4dt": "Iterable[Any]",
                    "llm-with-summary": "Iterable",
                    "llm-only": "list",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Iterable[Any]",
                    "test4dt_be": "Iterable[Any]"
                },
                "key": {
                    "test4dt": "Optional[Callable[[str], Any]]",
                    "llm-with-summary": "Union[None, Callable[[str], Any]]",
                    "llm-only": "Union[Callable[[str], Any], None]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[None, Callable[[str], Any]]",
                    "test4dt_be": "Optional[Callable[[str], Any]]"
                },
                "reverse": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "_atoi": {
                "text": {
                    "test4dt": "str",
                    "llm-with-summary": "Union[str, int]",
                    "llm-only": "Union[int, str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[int, str]",
                    "test4dt_be": "Union[str, int]"
                }
            },
            "_natural_keys": {
                "text": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "key_callback": {
                "text": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.utils": {
            "exists_case_sensitive": {
                "path": {
                    "test4dt": "Union[str, bytes, os.PathLike]",
                    "llm-with-summary": "Union[str, bytes, os.PathLike]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.wrap": {
            "import_statement": {
                "import_start": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "from_imports": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "List[str]"
                },
                "comments": {
                    "test4dt": "tuple",
                    "llm-with-summary": "tuple",
                    "llm-only": "tuple[str, ...]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "tuple",
                    "test4dt_be": "tuple"
                },
                "line_separator": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                },
                "multi_line_output": {
                    "test4dt": "Union[None, Any]",
                    "llm-with-summary": "Optional[Any]",
                    "llm-only": "Union[Enum, None]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[None, Enum]",
                    "test4dt_be": "None"
                }
            },
            "line": {
                "content": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "line_separator": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Optional[str]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Config",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "settings.Config",
                    "test4dt_se": "_Config",
                    "test4dt_be": "_Config"
                }
            }
        },
        "isort.wrap_modes": {
            "from_string": {
                "value": {
                    "test4dt": "Union[str, int]",
                    "llm-with-summary": "Union[str, int]",
                    "llm-only": "Union[str, int]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, int]",
                    "test4dt_be": "Union[str, int]"
                }
            },
            "formatter_from_string": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_wrap_mode_interface": {
                "statement": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                },
                "imports": {
                    "test4dt": "list",
                    "llm-with-summary": "list",
                    "llm-only": "list",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "List[str]",
                    "test4dt_be": "Union[List[str], Tuple[str, ...], Set[str]]"
                },
                "white_space": {
                    "test4dt": "Union[str, bool, None]",
                    "llm-with-summary": "Union[str, bool, None]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[bool, None]",
                    "test4dt_be": "Union[bool, str]"
                },
                "indent": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "int",
                    "test4dt_be": "Union[int, str]"
                },
                "line_length": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "int",
                    "test4dt_be": "int"
                },
                "comments": {
                    "test4dt": "bool",
                    "llm-with-summary": "None",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[List[str], bool]",
                    "test4dt_be": "bool"
                },
                "line_separator": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "Union[str, None]"
                },
                "comment_prefix": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "include_trailing_comma": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "remove_comments": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "_wrap_mode": {
                "function": {
                    "test4dt": "Callable",
                    "llm-with-summary": "Callable",
                    "llm-only": "function",
                    "hityper": "any",
                    "type4py": "Callable[..., None]",
                    "test4dt_se": "typing.Callable",
                    "test4dt_be": "typing.Callable"
                }
            },
            "grid": {},
            "vertical": {},
            "_hanging_indent_common": {
                "use_parentheses": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "hanging_indent": {},
            "vertical_hanging_indent": {},
            "_vertical_grid_common": {
                "need_trailing_char": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "vertical_grid": {},
            "vertical_grid_grouped": {},
            "vertical_grid_grouped_no_comma": {},
            "noqa": {},
            "vertical_hanging_indent_bracket": {},
            "vertical_prefix_from_module_import": {},
            "hanging_indent_with_parentheses": {},
            "backslash_grid": {},
            "end_line": {
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort._version": {},
        "isort": {},
        "isort.__main__": {},
        "isort.deprecated.finders": {
            "chdir": {
                "path": {
                    "test4dt": "Union[str, bytes]",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "BaseFinder.__init__": {
                "self": {
                    "test4dt": "BaseFinder",
                    "llm-with-summary": "BaseFinder",
                    "llm-only": "BaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "BaseFinder",
                    "test4dt_be": "BaseFinder"
                },
                "config": {
                    "test4dt": "Union[dict, Config]",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "Config",
                    "test4dt_se": "Union[dict, object]",
                    "test4dt_be": "dict"
                }
            },
            "BaseFinder.find": {
                "self": {
                    "test4dt": "BaseFinder",
                    "llm-with-summary": "BaseFinder",
                    "llm-only": "BaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "BaseFinder",
                    "test4dt_be": "BaseFinder"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ForcedSeparateFinder.find": {
                "self": {
                    "test4dt": "ForcedSeparateFinder",
                    "llm-with-summary": "ForcedSeparateFinder",
                    "llm-only": "ForcedSeparateFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ForcedSeparateFinder",
                    "test4dt_be": "ForcedSeparateFinder"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "LocalFinder.find": {
                "self": {
                    "test4dt": "LocalFinder",
                    "llm-with-summary": "LocalFinder",
                    "llm-only": "LocalFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "LocalFinder",
                    "test4dt_be": "LocalFinder"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "KnownPatternFinder.__init__": {
                "self": {
                    "test4dt": "KnownPatternFinder",
                    "llm-with-summary": "KnownPatternFinder",
                    "llm-only": "KnownPatternFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Union[ConfigParser, object]",
                    "test4dt_be": "KnownPatternFinder"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "Union[Config, object]",
                    "llm-only": "Union[Config, Any]",
                    "hityper": "any",
                    "type4py": "isorsettings.Config",
                    "test4dt_se": "Union[configparser.ConfigParser, _Config]",
                    "test4dt_be": "_Config"
                }
            },
            "KnownPatternFinder._parse_known_pattern": {
                "self": {
                    "test4dt": "KnownPatternFinder",
                    "llm-with-summary": "KnownPatternFinder",
                    "llm-only": "KnownPatternFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "KnownPatternFinder",
                    "test4dt_be": "KnownPatternFinder"
                },
                "pattern": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "KnownPatternFinder.find": {
                "self": {
                    "test4dt": "KnownPatternFinder",
                    "llm-with-summary": "KnownPatternFinder",
                    "llm-only": "KnownPatternFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "KnownPatternFinder",
                    "test4dt_be": "KnownPatternFinder"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "PathFinder.__init__": {
                "self": {
                    "test4dt": "PathFinder",
                    "llm-with-summary": "PathFinder",
                    "llm-only": "PathFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "PathFinder",
                    "test4dt_be": "PathFinder"
                },
                "config": {
                    "test4dt": "Config",
                    "llm-with-summary": "object",
                    "llm-only": "Union[object, dict]",
                    "hityper": "any",
                    "type4py": "isorsettings.Config",
                    "test4dt_se": "_Config",
                    "test4dt_be": "object"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "typing.Text",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "PathFinder.find": {
                "self": {
                    "test4dt": "PathFinder",
                    "llm-with-summary": "PathFinder",
                    "llm-only": "PathFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "PathFinder",
                    "test4dt_be": "PathFinder"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ReqsBaseFinder.__init__": {
                "self": {
                    "test4dt": "ReqsBaseFinder",
                    "llm-with-summary": "ReqsBaseFinder",
                    "llm-only": "ReqsBaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ReqsBaseFinder",
                    "test4dt_be": "ReqsBaseFinder"
                },
                "config": {
                    "test4dt": "dict",
                    "llm-with-summary": "Any",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "isorsettings.Config",
                    "test4dt_se": "Config",
                    "test4dt_be": "dict"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "typing.Text",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ReqsBaseFinder._get_names": {
                "self": {
                    "test4dt": "ReqsBaseFinder",
                    "llm-with-summary": "ReqsBaseFinder",
                    "llm-only": "ReqsBaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ReqsBaseFinder",
                    "test4dt_be": "ReqsBaseFinder"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ReqsBaseFinder._get_files_from_dir": {
                "self": {
                    "test4dt": "ReqsBaseFinder",
                    "llm-with-summary": "ReqsBaseFinder",
                    "llm-only": "ReqsBaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ReqsBaseFinder",
                    "test4dt_be": "ReqsBaseFinder"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ReqsBaseFinder._load_mapping": {},
            "ReqsBaseFinder._load_names": {
                "self": {
                    "test4dt": "ReqsBaseFinder",
                    "llm-with-summary": "ReqsBaseFinder",
                    "llm-only": "ReqsBaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ReqsBaseFinder",
                    "test4dt_be": "ReqsBaseFinder"
                }
            },
            "ReqsBaseFinder._get_parents": {
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ReqsBaseFinder._get_files": {
                "self": {
                    "test4dt": "ReqsBaseFinder",
                    "llm-with-summary": "ReqsBaseFinder",
                    "llm-only": "ReqsBaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ReqsBaseFinder",
                    "test4dt_be": "ReqsBaseFinder"
                }
            },
            "ReqsBaseFinder._normalize_name": {
                "self": {
                    "test4dt": "ReqsBaseFinder",
                    "llm-with-summary": "ReqsBaseFinder",
                    "llm-only": "ReqsBaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ReqsBaseFinder",
                    "test4dt_be": "ReqsBaseFinder"
                },
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "ReqsBaseFinder.find": {
                "self": {
                    "test4dt": "ReqsBaseFinder",
                    "llm-with-summary": "ReqsBaseFinder",
                    "llm-only": "ReqsBaseFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "ReqsBaseFinder",
                    "test4dt_be": "ReqsBaseFinder"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "RequirementsFinder._get_files_from_dir": {
                "self": {
                    "test4dt": "RequirementsFinder",
                    "llm-with-summary": "RequirementsFinder",
                    "llm-only": "RequirementsFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "RequirementsFinder",
                    "test4dt_be": "RequirementsFinder"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "RequirementsFinder._get_files_from_dir_cached": {
                "cls": {
                    "test4dt": "Type[RequirementsFinder]",
                    "llm-with-summary": "Type[RequirementsFinder]",
                    "llm-only": "Type[RequirementsFinder]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Type[RequirementsFinder]",
                    "test4dt_be": "Type[RequirementsFinder]"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "RequirementsFinder._get_names": {
                "self": {
                    "test4dt": "RequirementsFinder",
                    "llm-with-summary": "RequirementsFinder",
                    "llm-only": "RequirementsFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "RequirementsFinder",
                    "test4dt_be": "RequirementsFinder"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "RequirementsFinder._get_names_cached": {
                "cls": {
                    "test4dt": "Type[RequirementsFinder]",
                    "llm-with-summary": "RequirementsFinder",
                    "llm-only": "type[RequirementsFinder]",
                    "hityper": "any",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "type[RequirementsFinder]",
                    "test4dt_be": "Type[RequirementsFinder]"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "PipfileFinder._get_names": {
                "self": {
                    "test4dt": "PipfileFinder",
                    "llm-with-summary": "PipfileFinder",
                    "llm-only": "PipfileFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "PipfileFinder",
                    "test4dt_be": "PipfileFinder"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "PipfileFinder._get_files_from_dir": {
                "self": {
                    "test4dt": "PipfileFinder",
                    "llm-with-summary": "PipfileFinder",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "PipfileFinder",
                    "test4dt_be": "PipfileFinder"
                },
                "path": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "DefaultFinder.find": {
                "self": {
                    "test4dt": "DefaultFinder",
                    "llm-with-summary": "DefaultFinder",
                    "llm-only": "DefaultFinder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "DefaultFinder",
                    "test4dt_be": "DefaultFinder"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "Any",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "FindersManager.__init__": {
                "self": {
                    "test4dt": "FindersManager",
                    "llm-with-summary": "FindersManager",
                    "llm-only": "FindersManager",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "FindersManager",
                    "test4dt_be": "FindersManager"
                },
                "config": {
                    "test4dt": "_Config",
                    "llm-with-summary": "object",
                    "llm-only": "Config",
                    "hityper": "any",
                    "type4py": "isorsettings.Config",
                    "test4dt_se": "Config",
                    "test4dt_be": "_Config"
                },
                "finder_classes": {
                    "test4dt": "Optional[Sequence[Type[BaseFinder]]]",
                    "llm-with-summary": "Union[None, Sequence[Type[BaseFinder]]]",
                    "llm-only": "Optional[Sequence[Type[BaseFinder]]]",
                    "hityper": "None",
                    "type4py": "Optional[str]",
                    "test4dt_se": "Union[Sequence[Type[BaseFinder]], None]",
                    "test4dt_be": "Optional[Sequence[Type[BaseFinder]]]"
                }
            },
            "FindersManager.find": {
                "self": {
                    "test4dt": "FindersManager",
                    "llm-with-summary": "FindersManager",
                    "llm-only": "FindersManager",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Config",
                    "test4dt_be": "FindersManager"
                },
                "module_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            }
        },
        "isort.deprecated": {},
        "isort.stdlibs.all": {},
        "isort.stdlibs.py2": {},
        "isort.stdlibs.py27": {},
        "isort.stdlibs.py3": {},
        "isort.stdlibs.py35": {},
        "isort.stdlibs.py36": {},
        "isort.stdlibs.py37": {},
        "isort.stdlibs.py38": {},
        "isort.stdlibs.py39": {},
        "isort.stdlibs": {},
        "isort._future._dataclasses": {
            "field": {},
            "_tuple_str": {
                "obj_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "fields": {
                    "test4dt": "list[object]",
                    "llm-with-summary": "list",
                    "llm-only": "List[Field]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "list[Field]",
                    "test4dt_be": "list[object]"
                }
            },
            "_create_fn": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "args": {
                    "test4dt": "Union[List[str], Tuple[str, ...]]",
                    "llm-with-summary": "Iterable[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Iterable[str]",
                    "test4dt_be": "List[str]"
                },
                "body": {
                    "test4dt": "List[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Iterable[str]",
                    "test4dt_be": "List[str]"
                }
            },
            "_field_assign": {
                "frozen": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "value": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                },
                "self_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_field_init": {
                "f": {
                    "test4dt": "Field",
                    "llm-with-summary": "dataclasses.Field",
                    "llm-only": "dataclasses.Field",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Field",
                    "test4dt_be": "Field"
                },
                "frozen": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "globals": {
                    "test4dt": "dict",
                    "llm-with-summary": "dict",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "dict[str, Any]",
                    "test4dt_be": "dict[str, Any]"
                },
                "self_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_init_param": {
                "f": {
                    "test4dt": "Field",
                    "llm-with-summary": "Union[dataclasses.Field, Any]",
                    "llm-only": "Union[dataclasses.Field, Any]",
                    "hityper": "any",
                    "type4py": "Callable",
                    "test4dt_se": "Field",
                    "test4dt_be": "Field"
                }
            },
            "_init_fn": {
                "fields": {
                    "test4dt": "list[Field]",
                    "llm-with-summary": "list[Field]",
                    "llm-only": "list[Field]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "list[Field]",
                    "test4dt_be": "list[Field]"
                },
                "frozen": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "has_post_init": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[bool, None]",
                    "test4dt_be": "bool"
                },
                "self_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_repr_fn": {
                "fields": {
                    "test4dt": "list[object]",
                    "llm-with-summary": "list[object]",
                    "llm-only": "list[dataclasses.Field]",
                    "hityper": "any",
                    "type4py": "types.models.FieldDescriptorT",
                    "test4dt_se": "list[Field]",
                    "test4dt_be": "Iterable[Field]"
                }
            },
            "_frozen_get_del_attr": {
                "cls": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "fields": {
                    "test4dt": "list[_FIELD_BASE]",
                    "llm-with-summary": "Iterable[Field]",
                    "llm-only": "Iterable[object]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "list[Field]",
                    "test4dt_be": "list[object]"
                }
            },
            "_cmp_fn": {
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Callable",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "op": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Callable",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "self_tuple": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Callable",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "other_tuple": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Callable",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_hash_fn": {
                "fields": {
                    "test4dt": "Union[list[str], tuple[str, ...]]",
                    "llm-with-summary": "Iterable[str]",
                    "llm-only": "Union[list[str], tuple[str, ...]]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[list[str], tuple[str, ...]]",
                    "test4dt_be": "Iterable[str]"
                }
            },
            "_is_classvar": {
                "a_type": {
                    "test4dt": "Any",
                    "llm-with-summary": "typing._ClassVar",
                    "llm-only": "typing._ClassVar",
                    "hityper": "any",
                    "type4py": "mypy.types.Type",
                    "test4dt_se": "typing._ClassVar",
                    "test4dt_be": "Type"
                },
                "typing": {
                    "test4dt": "typing._ClassVar",
                    "llm-with-summary": "ModuleType",
                    "llm-only": "typing",
                    "hityper": "any",
                    "type4py": "mypy.types.Type",
                    "test4dt_se": "typing._ClassVar",
                    "test4dt_be": "ModuleType"
                }
            },
            "_is_initvar": {
                "a_type": {
                    "test4dt": "InitVar",
                    "llm-with-summary": "Any",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "dataclasses": {
                    "test4dt": "ModuleType",
                    "llm-with-summary": "ModuleType",
                    "llm-only": "ModuleType",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "a_type",
                    "test4dt_be": "module"
                }
            },
            "_is_type": {
                "annotation": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "cls": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "mypy.types.UnionType",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "a_module": {
                    "test4dt": "module",
                    "llm-with-summary": "ModuleType",
                    "llm-only": "ModuleType",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "ModuleType",
                    "test4dt_be": "module"
                },
                "a_type": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "mypy.types.UnionType",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "is_type_predicate": {
                    "test4dt": "Callable[[Any, ModuleType], bool]",
                    "llm-with-summary": "Callable[[Any, module], bool]",
                    "llm-only": "Callable[[Any, ModuleType], bool]",
                    "hityper": "any",
                    "type4py": "mypy.types.UnionType",
                    "test4dt_se": "Callable[[Any, types.ModuleType], bool]",
                    "test4dt_be": "Callable[[Any, ModuleType], bool]"
                }
            },
            "_get_field": {
                "cls": {
                    "test4dt": "type",
                    "llm-with-summary": "Type[Any]",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "Type[object]",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "a_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "a_type": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Union[type, str]",
                    "hityper": "any",
                    "type4py": "mypy.types.Type",
                    "test4dt_se": "Union[type, str]",
                    "test4dt_be": "Union[type, str, typing.ClassVar, dataclasses.InitVar]"
                }
            },
            "_set_new_attribute": {
                "cls": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "value": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                }
            },
            "_hash_set_none": {
                "cls": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "fields": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "None",
                    "test4dt_be": "Any"
                }
            },
            "_hash_add": {
                "cls": {
                    "test4dt": "Type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "fields": {
                    "test4dt": "list[Field]",
                    "llm-with-summary": "Iterable[object]",
                    "llm-only": "list[object]",
                    "hityper": "any",
                    "type4py": "Type",
                    "test4dt_se": "list[Field]",
                    "test4dt_be": "list[object]"
                }
            },
            "_hash_exception": {
                "cls": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "fields": {
                    "test4dt": "Any",
                    "llm-with-summary": "any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[list, tuple, dict]",
                    "test4dt_be": "Union[str, List[str], Dict[str, Any]]"
                }
            },
            "_process_class": {
                "cls": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "init": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "repr": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "eq": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "order": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "unsafe_hash": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "frozen": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "dataclass": {
                "_cls": {
                    "test4dt": "Union[type, None]",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                }
            },
            "fields": {
                "class_or_instance": {
                    "test4dt": "Union[Type[T], T]",
                    "llm-with-summary": "Union[Type[object], object]",
                    "llm-only": "Union[Type, object]",
                    "hityper": "any",
                    "type4py": "type",
                    "test4dt_se": "Union[Type[Any], Any]",
                    "test4dt_be": "Union[Type[dataclass], dataclass]"
                }
            },
            "_is_dataclass_instance": {
                "obj": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "T",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                }
            },
            "is_dataclass": {
                "obj": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "object",
                    "hityper": "any",
                    "type4py": "T",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                }
            },
            "asdict": {
                "obj": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "Type[T]",
                    "test4dt_se": "Any",
                    "test4dt_be": "dataclass"
                }
            },
            "_asdict_inner": {
                "obj": {
                    "test4dt": "Union[DataclassInstance, list, tuple, dict, Any]",
                    "llm-with-summary": "Union[Any, list, tuple, dict]",
                    "llm-only": "Union[list, tuple, dict, object]",
                    "hityper": "any",
                    "type4py": "T",
                    "test4dt_se": "Union[Any, list, tuple, dict]",
                    "test4dt_be": "Union[Any, list, tuple, dict]"
                },
                "dict_factory": {
                    "test4dt": "Callable[[List[Tuple[str, Any]]], Any]",
                    "llm-with-summary": "Callable[[List[Tuple[str, Any]]], Dict[str, Any]]",
                    "llm-only": "Callable[[List[Tuple[str, Any]]], Dict[str, Any]]",
                    "hityper": "any",
                    "type4py": "Type[object]",
                    "test4dt_se": "Callable[[List[Tuple[str, Any]]], Dict[str, Any]]",
                    "test4dt_be": "Callable[[List[Tuple[str, Any]]], Any]"
                }
            },
            "astuple": {
                "obj": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "Callable[[basilisp.lang.keyword.Keyword], Any]",
                    "test4dt_se": "Any",
                    "test4dt_be": "dataclass"
                }
            },
            "_astuple_inner": {
                "obj": {
                    "test4dt": "Union[Any, list, tuple, dict]",
                    "llm-with-summary": "Union[DataclassInstance, list, tuple, dict, Any]",
                    "llm-only": "Union[dataclass, list, tuple, dict, Any]",
                    "hityper": "any",
                    "type4py": "Iterable[T]",
                    "test4dt_se": "Union[Any, list, tuple, dict]",
                    "test4dt_be": "Union[Any, list, tuple, dict]"
                },
                "tuple_factory": {
                    "test4dt": "Callable[[List[Any]], tuple]",
                    "llm-with-summary": "Callable[[List[Any]], Tuple[Any, ...]]",
                    "llm-only": "Callable[[List[Any]], Tuple[Any, ...]]",
                    "hityper": "any",
                    "type4py": "type",
                    "test4dt_se": "Callable[[List[Any]], Tuple[Any, ...]]",
                    "test4dt_be": "Callable[[List[Any]], Tuple[Any, ...]]"
                }
            },
            "make_dataclass": {
                "cls_name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "mypy.types.FunctionLike",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "fields": {
                    "test4dt": "Union[list[Union[str, tuple[str, type], tuple[str, type, Field]]], tuple[Union[str, tuple[str, type], tuple[str, type, Field]], ...]]",
                    "llm-with-summary": "Union[list[str], list[tuple[str, type]], list[tuple[str, type, Field]]]",
                    "llm-only": "Union[str, Tuple[str, type], Tuple[str, type, Field]]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[list[str], list[tuple[str, type]], list[tuple[str, type, Any]]]",
                    "test4dt_be": "Union[str, Tuple[str, type], Tuple[str, type, Any]]"
                }
            },
            "replace": {
                "obj": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "dataclass"
                }
            },
            "_HAS_DEFAULT_FACTORY_CLASS.__repr__": {
                "self": {
                    "test4dt": "_HAS_DEFAULT_FACTORY_CLASS",
                    "llm-with-summary": "_HAS_DEFAULT_FACTORY_CLASS",
                    "llm-only": "self",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_HAS_DEFAULT_FACTORY_CLASS",
                    "test4dt_be": "_HAS_DEFAULT_FACTORY_CLASS"
                }
            },
            "_FIELD_BASE.__init__": {
                "self": {
                    "test4dt": "_FIELD_BASE",
                    "llm-with-summary": "\\_FIELD\\_BASE",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_FIELD_BASE",
                    "test4dt_be": "_FIELD_BASE"
                },
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_FIELD_BASE.__repr__": {
                "self": {
                    "test4dt": "_FIELD_BASE",
                    "llm-with-summary": "_FIELD_BASE",
                    "llm-only": "self",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_FIELD_BASE",
                    "test4dt_be": "_FIELD_BASE"
                }
            },
            "_InitVarMeta.__getitem__": {
                "self": {
                    "test4dt": "_InitVarMeta",
                    "llm-with-summary": "_InitVarMeta",
                    "llm-only": "_InitVarMeta",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_InitVarMeta",
                    "test4dt_be": "_InitVarMeta"
                },
                "params": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "Dict[str, Any]",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                }
            },
            "Field.__init__": {
                "self": {
                    "test4dt": "Field",
                    "llm-with-summary": "Field",
                    "llm-only": "Field",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Field",
                    "test4dt_be": "Field"
                },
                "default": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                },
                "default_factory": {
                    "test4dt": "typing.Callable[[], typing.Any]",
                    "llm-with-summary": "Union[Callable, None]",
                    "llm-only": "Optional[Callable[[], Any]]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Optional[Callable[[], Any]]",
                    "test4dt_be": "Optional[Callable]"
                },
                "init": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "repr": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "hash": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bytes",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "compare": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "metadata": {
                    "test4dt": "Union[None, dict]",
                    "llm-with-summary": "Union[None, dict]",
                    "llm-only": "Union[None, dict]",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "Union[None, dict]",
                    "test4dt_be": "Union[None, dict]"
                }
            },
            "Field.__repr__": {
                "self": {
                    "test4dt": "Field",
                    "llm-with-summary": "Field",
                    "llm-only": "Field",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Field",
                    "test4dt_be": "Field"
                }
            },
            "Field.__set_name__": {
                "self": {
                    "test4dt": "Field",
                    "llm-with-summary": "Field",
                    "llm-only": "Field",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "Field",
                    "test4dt_be": "Field"
                },
                "owner": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "name": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_DataclassParams.__init__": {
                "self": {
                    "test4dt": "_DataclassParams",
                    "llm-with-summary": "_DataclassParams",
                    "llm-only": "\\_DataclassParams",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_DataclassParams",
                    "test4dt_be": "_DataclassParams"
                },
                "init": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "repr": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "eq": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "order": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "unsafe_hash": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "frozen": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "_DataclassParams.__repr__": {
                "self": {
                    "test4dt": "_DataclassParams",
                    "llm-with-summary": "Union[_DataclassParams, None]",
                    "llm-only": "\\_DataclassParams",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "_DataclassParams",
                    "test4dt_be": "_DataclassParams"
                }
            },
            "wrap": {
                "cls": {
                    "test4dt": "Type[Any]",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "Type[Any]",
                    "test4dt_se": "Type[Any]",
                    "test4dt_be": "type"
                }
            }
        },
        "isort._future": {},
        "isort._vendored.toml.decoder": {
            "_detect_pathlib_path": {
                "p": {
                    "test4dt": "pathlib.PurePath",
                    "llm-with-summary": "Union[str, pathlib.PurePath]",
                    "llm-only": "Union[str, pathlib.PurePath]",
                    "hityper": "any",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "pathlib.PurePath",
                    "test4dt_be": "Union[pathlib.PurePath, Any]"
                }
            },
            "_ispath": {
                "p": {
                    "test4dt": "Union[bytes, str]",
                    "llm-with-summary": "Union[bytes, str, pathlib.Path]",
                    "llm-only": "Union[bytes, str]",
                    "hityper": "any",
                    "type4py": "bytes",
                    "test4dt_se": "Union[bytes, str, pathlib.Path]",
                    "test4dt_be": "Union[bytes, basestring, pathlib.Path]"
                }
            },
            "_getpath": {
                "p": {
                    "test4dt": "Union[str, os.PathLike]",
                    "llm-with-summary": "Union[str, bytes, os.PathLike, pathlib.Path, Any]",
                    "llm-only": "Union[str, bytes, os.PathLike]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, bytes, os.PathLike, pathlib.Path, Any]",
                    "test4dt_be": "Union[str, bytes, os.PathLike, Any]"
                }
            },
            "_strictly_valid_num": {
                "n": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "load": {
                "f": {
                    "test4dt": "Union[str, List[str], IO]",
                    "llm-with-summary": "Union[str, List[str], IO]",
                    "llm-only": "Union[str, list[str], IO]",
                    "hityper": "any",
                    "type4py": "pathlib.Path",
                    "test4dt_se": "Union[str, List[str], IO]",
                    "test4dt_be": "Union[str, List[str], IO]"
                },
                "_dict": {
                    "test4dt": "Type[dict]",
                    "llm-with-summary": "type[dict]",
                    "llm-only": "Type[dict]",
                    "hityper": "any",
                    "type4py": "Mapping",
                    "test4dt_se": "type[dict]",
                    "test4dt_be": "type"
                },
                "decoder": {
                    "test4dt": "Union[TomlDecoder, None]",
                    "llm-with-summary": "Union[TomlDecoder, None]",
                    "llm-only": "Union[TomlDecoder, None]",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "Union[TomlDecoder, None]",
                    "test4dt_be": "Union[TomlDecoder, None]"
                }
            },
            "loads": {
                "s": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "basestring",
                    "hityper": "any",
                    "type4py": "Optional[Type[Any]]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "_dict": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "Type[dict]",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "Type[dict]",
                    "test4dt_be": "type"
                },
                "decoder": {
                    "test4dt": "Union[TomlDecoder, None]",
                    "llm-with-summary": "Union[TomlDecoder, None]",
                    "llm-only": "Union[None, TomlDecoder]",
                    "hityper": "any",
                    "type4py": "Optional[Dict[str, str]]",
                    "test4dt_se": "Union[TomlDecoder, TomlPreserveInlineDictEncoder]",
                    "test4dt_be": "Optional[TomlDecoder]"
                }
            },
            "_load_date": {
                "val": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "datetime.datetime",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_load_unicode_escapes": {
                "v": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "unicode",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "hexbytes": {
                    "test4dt": "Iterable[str]",
                    "llm-with-summary": "List[str]",
                    "llm-only": "List[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Iterable[str]",
                    "test4dt_be": "Iterable[str]"
                },
                "prefix": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "_unescape": {
                "v": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlDecodeError.__init__": {
                "self": {
                    "test4dt": "TomlDecodeError",
                    "llm-with-summary": "TomlDecodeError",
                    "llm-only": "TomlDecodeError",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecodeError",
                    "test4dt_be": "TomlDecodeError"
                },
                "msg": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "doc": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Dict[str, str]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "pos": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "int",
                    "test4dt_be": "int"
                }
            },
            "CommentValue.__init__": {
                "self": {
                    "test4dt": "CommentValue",
                    "llm-with-summary": "CommentValue",
                    "llm-only": "CommentValue",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "CommentValue",
                    "test4dt_be": "CommentValue"
                },
                "val": {
                    "test4dt": "Any",
                    "llm-with-summary": "object",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "Any"
                },
                "comment": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "beginline": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "_dict": {
                    "test4dt": "Union[dict, type]",
                    "llm-with-summary": "dict",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                }
            },
            "CommentValue.__getitem__": {
                "self": {
                    "test4dt": "CommentValue",
                    "llm-with-summary": "CommentValue",
                    "llm-only": "CommentValue",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "CommentValue",
                    "test4dt_be": "CommentValue"
                },
                "key": {
                    "test4dt": "Union[str, int]",
                    "llm-with-summary": "Union[int, str]",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[int, str]",
                    "test4dt_be": "str"
                }
            },
            "CommentValue.__setitem__": {
                "self": {
                    "test4dt": "CommentValue",
                    "llm-with-summary": "CommentValue",
                    "llm-only": "CommentValue",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "CommentValue",
                    "test4dt_be": "CommentValue"
                },
                "key": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "value": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "Any",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "dict"
                }
            },
            "CommentValue.dump": {
                "self": {
                    "test4dt": "CommentValue",
                    "llm-with-summary": "CommentValue",
                    "llm-only": "CommentValue",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "CommentValue",
                    "test4dt_be": "CommentValue"
                },
                "dump_value_func": {
                    "test4dt": "Callable[[Any], str]",
                    "llm-with-summary": "Callable[[Any], str]",
                    "llm-only": "Callable[[Any], str]",
                    "hityper": "any",
                    "type4py": "Callable",
                    "test4dt_se": "Callable[[Any], str]",
                    "test4dt_be": "Callable[[Any], str]"
                }
            },
            "TomlDecoder.__init__": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "Union[dict, type]"
                },
                "_dict": {
                    "test4dt": "dict",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "dict",
                    "type4py": "dict",
                    "test4dt_se": "type",
                    "test4dt_be": "dict"
                }
            },
            "TomlDecoder.get_empty_table": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "type"
                }
            },
            "TomlDecoder.get_empty_inline_table": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "type"
                }
            },
            "TomlDecoder.load_inline_object": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "currentlevel": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                },
                "multikey": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "bool",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "multibackslash": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "bool",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "TomlDecoder._get_split_on_quotes": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlDecoder.load_line": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "line": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "currentlevel": {
                    "test4dt": "dict",
                    "llm-with-summary": "dict",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                },
                "multikey": {
                    "test4dt": "Union[str, None]",
                    "llm-with-summary": "Union[str, None]",
                    "llm-only": "Union[str, None]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, None]",
                    "test4dt_be": "str"
                },
                "multibackslash": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "any",
                    "type4py": "Iterable[str]",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "TomlDecoder._load_line_multiline_str": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "p": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "List[str]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlDecoder.load_value": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "v": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "strictly_valid": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "bool",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "TomlDecoder.bounded_string": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "s": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlDecoder._load_array_isstrarray": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "str"
                },
                "a": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "a",
                    "hityper": "any",
                    "type4py": "float",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlDecoder.load_array": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "a": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlDecoder.preserve_comment": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "line_no": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "int",
                    "test4dt_be": "int"
                },
                "key": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "comment": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Any",
                    "test4dt_be": "Union[str, None]"
                },
                "beginline": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "bool",
                    "test4dt_be": "int"
                }
            },
            "TomlDecoder.embed_comments": {
                "self": {
                    "test4dt": "TomlDecoder",
                    "llm-with-summary": "TomlDecoder",
                    "llm-only": "TomlDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlDecoder",
                    "test4dt_be": "TomlDecoder"
                },
                "idx": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "Any",
                    "test4dt_be": "int"
                },
                "currentlevel": {
                    "test4dt": "dict",
                    "llm-with-summary": "Union[int, str]",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "dict",
                    "test4dt_be": "any"
                }
            },
            "TomlPreserveCommentDecoder.__init__": {
                "self": {
                    "test4dt": "TomlPreserveCommentDecoder",
                    "llm-with-summary": "TomlPreserveCommentDecoder",
                    "llm-only": "TomlPreserveCommentDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlPreserveCommentDecoder",
                    "test4dt_be": "TomlPreserveCommentDecoder"
                },
                "_dict": {
                    "test4dt": "dict",
                    "llm-with-summary": "dict",
                    "llm-only": "type",
                    "hityper": "dict",
                    "type4py": "Dict[str, Any]",
                    "test4dt_se": "dict",
                    "test4dt_be": "type"
                }
            },
            "TomlPreserveCommentDecoder.preserve_comment": {
                "self": {
                    "test4dt": "TomlPreserveCommentDecoder",
                    "llm-with-summary": "TomlPreserveCommentDecoder",
                    "llm-only": "TomlPreserveCommentDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlPreserveCommentDecoder",
                    "test4dt_be": "TomlPreserveCommentDecoder"
                },
                "line_no": {
                    "test4dt": "int",
                    "llm-with-summary": "int",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "List[Dict[str, Any]]",
                    "test4dt_se": "int",
                    "test4dt_be": "int"
                },
                "key": {
                    "test4dt": "str",
                    "llm-with-summary": "Hashable",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "List[Dict[str, Any]]",
                    "test4dt_se": "Hashable",
                    "test4dt_be": "Hashable"
                },
                "comment": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "List[Dict[str, Any]]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "beginline": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "int",
                    "hityper": "any",
                    "type4py": "List[Dict[str, Any]]",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "TomlPreserveCommentDecoder.embed_comments": {
                "self": {
                    "test4dt": "TomlPreserveCommentDecoder",
                    "llm-with-summary": "TomlPreserveCommentDecoder",
                    "llm-only": "TomlPreserveCommentDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlPreserveCommentDecoder",
                    "test4dt_be": "type"
                },
                "idx": {
                    "test4dt": "Union[int, str]",
                    "llm-with-summary": "Union[int, str]",
                    "llm-only": "Union[int, str, tuple]",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "Union[int, str]",
                    "test4dt_be": "int"
                },
                "currentlevel": {
                    "test4dt": "dict",
                    "llm-with-summary": "dict",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                }
            }
        },
        "isort._vendored.toml.encoder": {
            "dump": {
                "o": {
                    "test4dt": "Any",
                    "llm-with-summary": "Any",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "T",
                    "test4dt_se": "dict",
                    "test4dt_be": "object"
                },
                "f": {
                    "test4dt": "IO[str]",
                    "llm-with-summary": "typing.TextIO",
                    "llm-only": "IO[str]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "IO[str]",
                    "test4dt_be": "IO[str]"
                },
                "encoder": {
                    "test4dt": "Union[TomlEncoder, TomlNumpyEncoder, TomlArraySeparatorEncoder]",
                    "llm-with-summary": "TomlEncoder",
                    "llm-only": "TomlEncoder",
                    "hityper": "any",
                    "type4py": "T",
                    "test4dt_se": "Union[TomlEncoder, TomlNumpyEncoder, None]",
                    "test4dt_be": "TomlEncoder"
                }
            },
            "dumps": {
                "o": {
                    "test4dt": "dict[str, Union[str, list[str], int]]",
                    "llm-with-summary": "dict",
                    "llm-only": "dict[str, Union[str, list, int, float, bool, None]]",
                    "hityper": "any",
                    "type4py": "IO",
                    "test4dt_se": "dict[str, Union[str, list[str], int]]",
                    "test4dt_be": "dict[str, Union[str, list[str], int]]"
                },
                "encoder": {
                    "test4dt": "Union[TomlEncoder, None]",
                    "llm-with-summary": "Union[TomlEncoder, None]",
                    "llm-only": "Union[TomlEncoder, None]",
                    "hityper": "any",
                    "type4py": "IO",
                    "test4dt_se": "Union[TomlEncoder, TomlPreserveInlineDictEncoder, None]",
                    "test4dt_be": "TomlEncoder"
                }
            },
            "_dump_str": {
                "v": {
                    "test4dt": "Union[str, unicode]",
                    "llm-with-summary": "Union[str, unicode]",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, unicode]",
                    "test4dt_be": "Union[str, unicode]"
                }
            },
            "_dump_float": {
                "v": {
                    "test4dt": "float",
                    "llm-with-summary": "float",
                    "llm-only": "float",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "float",
                    "test4dt_be": "float"
                }
            },
            "_dump_time": {
                "v": {
                    "test4dt": "datetime.datetime",
                    "llm-with-summary": "datetime.datetime",
                    "llm-only": "datetime.datetime",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "datetime.datetime",
                    "test4dt_be": "datetime.datetime"
                }
            },
            "TomlEncoder.__init__": {
                "self": {
                    "test4dt": "TomlEncoder",
                    "llm-with-summary": "TomlEncoder",
                    "llm-only": "TomlEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlEncoder",
                    "test4dt_be": "TomlEncoder"
                },
                "_dict": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "dict",
                    "type4py": "dict",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                },
                "preserve": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "bool",
                    "type4py": "bool",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "TomlEncoder.get_empty_table": {
                "self": {
                    "test4dt": "TomlEncoder",
                    "llm-with-summary": "TomlEncoder",
                    "llm-only": "TomlEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlEncoder",
                    "test4dt_be": "type"
                }
            },
            "TomlEncoder.dump_list": {
                "self": {
                    "test4dt": "TomlEncoder",
                    "llm-with-summary": "TomlEncoder",
                    "llm-only": "TomlEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlEncoder",
                    "test4dt_be": "TomlEncoder"
                },
                "v": {
                    "test4dt": "list",
                    "llm-with-summary": "list",
                    "llm-only": "Union[str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "hityper": "any",
                    "type4py": "list",
                    "test4dt_se": "Union[str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "test4dt_be": "list"
                }
            },
            "TomlEncoder.dump_inline_table": {
                "self": {
                    "test4dt": "TomlEncoder",
                    "llm-with-summary": "TomlEncoder",
                    "llm-only": "TomlEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlEncoder",
                    "test4dt_be": "TomlEncoder"
                },
                "section": {
                    "test4dt": "Union[dict, Any]",
                    "llm-with-summary": "Union[dict, str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "llm-only": "Union[dict, str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "hityper": "any",
                    "type4py": "dict",
                    "test4dt_se": "Union[dict, str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "test4dt_be": "Union[dict, str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]"
                }
            },
            "TomlEncoder.dump_value": {
                "self": {
                    "test4dt": "TomlEncoder",
                    "llm-with-summary": "TomlEncoder",
                    "llm-only": "TomlEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlEncoder",
                    "test4dt_be": "TomlEncoder"
                },
                "v": {
                    "test4dt": "Union[str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "llm-with-summary": "Union[str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "llm-only": "Union[str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date, object]",
                    "test4dt_be": "Union[str, unicode, list, bool, int, float, Decimal, datetime.datetime, datetime.time, datetime.date, object]"
                }
            },
            "TomlEncoder.dump_sections": {
                "self": {
                    "test4dt": "TomlEncoder",
                    "llm-with-summary": "TomlEncoder",
                    "llm-only": "TomlEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlEncoder",
                    "test4dt_be": "TomlEncoder"
                },
                "o": {
                    "test4dt": "dict[str, Union[dict, list, None, str, int, float, bool, datetime.datetime, datetime.time, datetime.date]]",
                    "llm-with-summary": "dict[str, Union[dict, list, str, int, float, bool, datetime.datetime, datetime.time, datetime.date, Decimal, None]]",
                    "llm-only": "dict",
                    "hityper": "any",
                    "type4py": "Mapping[str, str]",
                    "test4dt_se": "Dict[str, Union[Dict[str, Any], List[Union[Dict[str, Any], Any]], str, int, float, bool, datetime.datetime, datetime.date, datetime.time, Decimal]]",
                    "test4dt_be": "dict"
                },
                "sup": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "any",
                    "type4py": "Optional[str]",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlPreserveInlineDictEncoder.__init__": {
                "self": {
                    "test4dt": "TomlPreserveInlineDictEncoder",
                    "llm-with-summary": "TomlPreserveInlineDictEncoder",
                    "llm-only": "type",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlPreserveInlineDictEncoder",
                    "test4dt_be": "TomlPreserveInlineDictEncoder"
                },
                "_dict": {
                    "test4dt": "type",
                    "llm-with-summary": "type",
                    "llm-only": "type",
                    "hityper": "dict",
                    "type4py": "dict",
                    "test4dt_se": "type",
                    "test4dt_be": "type"
                }
            },
            "TomlArraySeparatorEncoder.__init__": {
                "self": {
                    "test4dt": "TomlArraySeparatorEncoder",
                    "llm-with-summary": "TomlArraySeparatorEncoder",
                    "llm-only": "TomlArraySeparatorEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlArraySeparatorEncoder",
                    "test4dt_be": "TomlArraySeparatorEncoder"
                },
                "_dict": {
                    "test4dt": "dict",
                    "llm-with-summary": "dict",
                    "llm-only": "type",
                    "hityper": "dict",
                    "type4py": "dict",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                },
                "preserve": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "bool",
                    "type4py": "dict",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                },
                "separator": {
                    "test4dt": "str",
                    "llm-with-summary": "str",
                    "llm-only": "str",
                    "hityper": "typing.Text",
                    "type4py": "str",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlArraySeparatorEncoder.dump_list": {
                "self": {
                    "test4dt": "TomlArraySeparatorEncoder",
                    "llm-with-summary": "TomlArraySeparatorEncoder",
                    "llm-only": "TomlArraySeparatorEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlArraySeparatorEncoder",
                    "test4dt_be": "TomlArraySeparatorEncoder"
                },
                "v": {
                    "test4dt": "list",
                    "llm-with-summary": "list",
                    "llm-only": "list",
                    "hityper": "any",
                    "type4py": "list",
                    "test4dt_se": "List[Union[Any, List[Any]]]",
                    "test4dt_be": "list"
                }
            },
            "TomlNumpyEncoder.__init__": {
                "self": {
                    "test4dt": "TomlNumpyEncoder",
                    "llm-with-summary": "TomlNumpyEncoder",
                    "llm-only": "TomlNumpyEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlNumpyEncoder",
                    "test4dt_be": "TomlNumpyEncoder"
                },
                "_dict": {
                    "test4dt": "dict",
                    "llm-with-summary": "dict",
                    "llm-only": "type",
                    "hityper": "dict",
                    "type4py": "dict",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                },
                "preserve": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "bool",
                    "type4py": "dict",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "TomlNumpyEncoder._dump_int": {
                "self": {
                    "test4dt": "TomlNumpyEncoder",
                    "llm-with-summary": "TomlNumpyEncoder",
                    "llm-only": "TomlNumpyEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlNumpyEncoder",
                    "test4dt_be": "TomlNumpyEncoder"
                },
                "v": {
                    "test4dt": "Union[np.int16, np.int32, np.int64]",
                    "llm-with-summary": "Union[np.int16, np.int32, np.int64]",
                    "llm-only": "Union[np.int16, np.int32, np.int64]",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "Union[numpy.int16, numpy.int32, numpy.int64]",
                    "test4dt_be": "Union[numpy.int16, numpy.int32, numpy.int64]"
                }
            },
            "TomlPreserveCommentEncoder.__init__": {
                "self": {
                    "test4dt": "TomlPreserveCommentEncoder",
                    "llm-with-summary": "TomlPreserveCommentEncoder",
                    "llm-only": "TomlPreserveCommentEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlPreserveCommentEncoder",
                    "test4dt_be": "TomlPreserveCommentEncoder"
                },
                "_dict": {
                    "test4dt": "type",
                    "llm-with-summary": "dict",
                    "llm-only": "type",
                    "hityper": "dict",
                    "type4py": "dict",
                    "test4dt_se": "dict",
                    "test4dt_be": "dict"
                },
                "preserve": {
                    "test4dt": "bool",
                    "llm-with-summary": "bool",
                    "llm-only": "bool",
                    "hityper": "bool",
                    "type4py": "dict",
                    "test4dt_se": "bool",
                    "test4dt_be": "bool"
                }
            },
            "TomlPathlibEncoder._dump_pathlib_path": {
                "self": {
                    "test4dt": "TomlPathlibEncoder",
                    "llm-with-summary": "TomlPathlibEncoder",
                    "llm-only": "pathlib.Path",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlPathlibEncoder",
                    "test4dt_be": "pathlib.Path"
                },
                "v": {
                    "test4dt": "pathlib.Path",
                    "llm-with-summary": "pathlib.Path",
                    "llm-only": "pathlib.Path",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "pathlib.Path",
                    "test4dt_be": "pathlib.Path"
                }
            },
            "TomlPathlibEncoder.dump_value": {
                "self": {
                    "test4dt": "TomlPathlibEncoder",
                    "llm-with-summary": "TomlPathlibEncoder",
                    "llm-only": "TomlPathlibEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlPathlibEncoder",
                    "test4dt_be": "Union[Any, pathlib.PurePath]"
                },
                "v": {
                    "test4dt": "Union[pathlib.PurePath, Any]",
                    "llm-with-summary": "Union[pathlib.PurePath, Any]",
                    "llm-only": "Union[str, pathlib.PurePath]",
                    "hityper": "any",
                    "type4py": "str",
                    "test4dt_se": "Union[pathlib.PurePath, Any]",
                    "test4dt_be": "Union[pathlib.PurePath, Any]"
                }
            }
        },
        "isort._vendored.toml.ordered": {
            "TomlOrderedDecoder.__init__": {
                "self": {
                    "test4dt": "TomlOrderedDecoder",
                    "llm-with-summary": "TomlOrderedDecoder",
                    "llm-only": "TomlOrderedDecoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlOrderedDecoder",
                    "test4dt_be": "TomlOrderedDecoder"
                }
            },
            "TomlOrderedEncoder.__init__": {
                "self": {
                    "test4dt": "TomlOrderedEncoder",
                    "llm-with-summary": "TomlOrderedEncoder",
                    "llm-only": "TomlOrderedEncoder",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlOrderedEncoder",
                    "test4dt_be": "TomlOrderedEncoder"
                }
            }
        },
        "isort._vendored.toml.tz": {
            "TomlTz.__init__": {
                "self": {
                    "test4dt": "TomlTz",
                    "llm-with-summary": "TomlTz",
                    "llm-only": "TomlTz",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                },
                "toml_offset": {
                    "test4dt": "str",
                    "llm-with-summary": "Union[str, str]",
                    "llm-only": "Union[str, Literal[\"Z\"]]",
                    "hityper": "any",
                    "type4py": "int",
                    "test4dt_se": "str",
                    "test4dt_be": "str"
                }
            },
            "TomlTz.tzname": {
                "self": {
                    "test4dt": "str",
                    "llm-with-summary": "TomlTz",
                    "llm-only": "TomlTz",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlTz",
                    "test4dt_be": "str"
                },
                "dt": {
                    "test4dt": "datetime",
                    "llm-with-summary": "datetime.datetime",
                    "llm-only": "datetime.datetime",
                    "hityper": "any",
                    "type4py": "datetime.datetime",
                    "test4dt_se": "datetime.datetime",
                    "test4dt_be": "datetime.datetime"
                }
            },
            "TomlTz.utcoffset": {
                "self": {
                    "test4dt": "TomlTz",
                    "llm-with-summary": "TomlTz",
                    "llm-only": "TomlTz",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "TomlTz",
                    "test4dt_be": "TomlTz"
                },
                "dt": {
                    "test4dt": "datetime",
                    "llm-with-summary": "datetime.datetime",
                    "llm-only": "datetime",
                    "hityper": "any",
                    "type4py": "datetime.datetime",
                    "test4dt_se": "datetime.datetime",
                    "test4dt_be": "datetime.datetime"
                }
            },
            "TomlTz.dst": {
                "self": {
                    "test4dt": "TomlTz",
                    "llm-with-summary": "TomlTz",
                    "llm-only": "TomlTz",
                    "hityper": "any",
                    "type4py": "any",
                    "test4dt_se": "str",
                    "test4dt_be": "TomlTz"
                },
                "dt": {
                    "test4dt": "Any",
                    "llm-with-summary": "datetime.datetime",
                    "llm-only": "datetime",
                    "hityper": "any",
                    "type4py": "datetime.datetime",
                    "test4dt_se": "datetime",
                    "test4dt_be": "datetime"
                }
            }
        },
        "isort._vendored.toml": {}
    }
}